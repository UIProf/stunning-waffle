{"version":3,"sources":["DesignSystem/View/View.tsx","DesignSystem/Form/FormInput/FormInput.tsx","DesignSystem/Form/SubmitButton/SubmitButton.tsx","DesignSystem/Title/Title.tsx","Services/Services.ts","Constants/Path.ts","Actions/AppAction.ts","Store/Store.tsx","Views/Eligibility/EligibilityApplication/EligibilityApplication.tsx","Views/Eligibility/EligibilityResults/EligibilityResults.tsx","Views/Eligibility/Eligibility.tsx","App.tsx","reportWebVitals.ts","DesignSystem/globalStyles.ts","index.tsx"],"names":["View","styled","div","InputWrapper","Input","input","FormInput","props","ButtonWrapper","Button","button","SubmitButton","text","type","Title","h1","headers","postData","data","a","URL","axios","post","then","response","catch","error","console","log","postDataAction","dispatch","PostResultResponse","initialState","eligibleCards","Store","React","createContext","FormWrapper","EligibilityApplication","useContext","useFormik","initialValues","name","email","address","onSubmit","values","handleChange","handleSubmit","id","onChange","value","placeholder","ResultsWrapper","EligibilityResults","Eligibility","AppWrapper","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createGlobalStyle","css","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAWeA,EATFC,IAAOC,IAAV,wJ,uBCCJC,EAAeF,IAAOC,IAAV,8HAOZE,EAAQH,IAAOI,MAAV,oYA+BIC,EARG,SAACC,GACjB,OACE,cAACJ,EAAD,UACE,cAACC,EAAD,eAAWG,OCjCXC,EAAgBP,IAAOC,IAAV,+HAObO,EAASR,IAAOS,OAAV,siBAqCGC,EARM,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KACtB,OACE,cAACJ,EAAD,UACE,cAACC,EAAD,CAAQI,KAAK,SAAb,SAAuBD,OCnCdE,EALDb,IAAOc,GAAV,8D,yCCOLC,EAAU,CACZ,eAAgB,iCAChB,8BAA8B,KAGrBC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sDACdC,EADc,UCdA,wBDcA,UAEpBC,IAAMC,KAAKF,EAAKF,EAAM,CAACF,YACpBO,MAAK,SAAUC,GACd,OAAOA,KAERC,OAAM,SAAUC,GACfC,QAAQC,IAAIF,MAPI,2CAAH,sDEZRG,EAAc,uCAAG,WAAOX,EAAgBY,GAAvB,eAAAX,EAAA,sEACOF,EAASC,GADhB,OACpBa,EADoB,OAE1BJ,QAAQC,IAAIG,GAFc,2CAAH,wDCSrBC,G,MAAsB,CACxBC,cAAc,KAGLC,EAAQC,IAAMC,cAA4BJ,GCJjDK,EAAcpC,IAAOC,IAAV,+DAwDFoC,EA7CgB,WAAO,IAC5BR,EAAaS,qBAAWL,GAAxBJ,SAD2B,EAEYU,YAAsB,CACnEC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,QAAS,IAEXC,SAAU,SAACC,GAAD,OAAYjB,EAAeiB,EAAQhB,MANvCiB,EAF2B,EAE3BA,aAAcC,EAFa,EAEbA,aAAcF,EAFD,EAECA,OASpC,OACE,eAACT,EAAD,WACE,cAAC,EAAD,oBACA,uBAAMQ,SAAUG,EAAhB,UACE,cAAC,EAAD,CACEnC,KAAK,OACL6B,KAAK,OACLO,GAAG,OACHC,SAAUH,EACVI,MAAOL,EAAOJ,KACdU,YAAY,SAEd,cAAC,EAAD,CACEvC,KAAK,QACL6B,KAAK,QACLO,GAAG,QACHC,SAAUH,EACVI,MAAOL,EAAOH,MACdS,YAAY,UAEd,cAAC,EAAD,CACEvC,KAAK,OACL6B,KAAK,UACLO,GAAG,UACHC,SAAUH,EACVI,MAAOL,EAAOF,QACdQ,YAAY,YAEd,cAAC,EAAD,CAAcxC,KAAK,kBC1DrByC,EAAiBpD,IAAOC,IAAV,0JAaLoD,EAJY,WACzB,OAAO,cAACD,EAAD,KCCME,EATK,WAClB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCLAC,EAAavD,IAAOC,IAAV,gHAeDuD,EARH,WACV,OACE,cAACD,EAAD,UACE,cAAC,EAAD,OCASE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCPCO,cAAf,kCACIC,YADJ,6RCKAC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.adcdc487.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst View = styled.div`\n  flex: 0 0 800px;\n  display: flex;\n  flex-wrap: wrap;\n  width: 800px;\n  max-width: 800px;\n  justify-content: center;\n`;\n\nexport default View;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InputWrapper = styled.div`\n  width: 100%;\n  height: 40px;\n  background-color: rgb(255, 255, 255);\n  margin-bottom: 16px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  background-color: transparent;\n  font-family: Manrope, -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\",\n    Roboto, \"Helvetica Neue\", Arial, sans-serif;\n  font-size: 0.875rem;\n  border: 1px solid rgba(0, 0, 0, 0.16);\n  border-radius: 1px;\n  position: relative;\n  padding: 4px 8px;\n`;\n\ninterface InputProps {\n  type: string;\n  name: string;\n  id: string;\n  onChange: (e: React.ChangeEvent<any>) => void;\n  value: string;\n  placeholder?: string;\n}\n\nconst FormInput = (props: InputProps) => {\n  return (\n    <InputWrapper>\n      <Input {...props} />\n    </InputWrapper>\n  );\n};\n\nexport default FormInput;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ButtonWrapper = styled.div`\n  width: 100px;\n  height: 40px;\n  background-color: rgb(255, 255, 255);\n  margin-bottom: 16px;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  background-color: #2a62e7;\n  font-family: Manrope, -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\",\n    Roboto, \"Helvetica Neue\", Arial, sans-serif;\n  font-size: 0.875rem;\n  border: 1px solid rgba(0, 0, 0, 0.16);\n  border-radius: 1px;\n  position: relative;\n  padding: 4px 8px;\n  color: #fff;\n\n  :active {\n    background-color: #0a2b7b;\n  }\n  :hover {\n    background-color: #1e4ebe;\n  }\n  :focus {\n    outline: #0a2b7b auto 2px;\n  }\n`;\n\ninterface SubmitButtonProps {\n  text: string;\n}\n\nconst SubmitButton = ({ text }: SubmitButtonProps) => {\n  return (\n    <ButtonWrapper>\n      <Button type=\"submit\">{text}</Button>\n    </ButtonWrapper>\n  );\n};\n\nexport default SubmitButton;\n","import styled from \"styled-components\";\n\nconst Title = styled.h1`\n  margin-top: 0;\n  width: 100%;\n`;\n\nexport default Title;\n","import axios from 'axios';\nimport { API_PATH } from '../Constants/Path';\n\nexport interface IPostData {\n    name: string;\n    email: string;\n    address: string;\n}\n\nconst headers = {\n    'Content-Type': 'application/json;charset=utf-8',\n    'Access-Control-Allow-Origin':'*'\n};\n\nexport const postData = async (data: IPostData) => {\n    const URL = `${API_PATH}/apply`;\n    axios.post(URL, data, {headers})\n      .then(function (response) {\n        return response;\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n}","export const API_PATH = \"http://localhost:8080\";","import { IPostData, postData } from '../Services/Services';\n\nexport const postDataAction = async (data:IPostData, dispatch: any) => {\n    const PostResultResponse = await postData(data);\n    console.log(PostResultResponse);\n}","import React, { useReducer } from 'react';\n\nexport interface IState {\n    eligibleCards: Array<String>;\n}\n\nexport interface IAction {\n    type: string;\n    payload: any;\n}\n\nconst initialState:IState = {\n    eligibleCards:[]\n}\n\nexport const Store = React.createContext<IState | any>(initialState);\n\nconst appReducer = (state: IState, action: IAction) => {\n    switch (action.type) {\n        case \"POST_DATA_RESPONSE\":\n            return {...state, eligibleCards: action.payload}\n        default:\n            return state;\n    }\n}\n\nexport const StoreProvider = ({children}:JSX.ElementChildrenAttribute):JSX.Element => {\n    const [state, dispatch] = useReducer(appReducer, initialState);\n    return (\n        <Store.Provider value={{state,  dispatch}}></Store.Provider>\n    );\n}","import React, { useContext } from \"react\";\nimport { useFormik } from \"formik\";\nimport styled from \"styled-components\";\n\nimport FormInput from \"../../../DesignSystem/Form/FormInput\";\nimport SubmitButton from \"../../../DesignSystem/Form/SubmitButton\";\nimport Title from \"../../../DesignSystem/Title\";\n\nimport { postDataAction } from \"../../../Actions/AppAction\";\nimport { Store } from \"../../../Store/Store\";\n\nconst FormWrapper = styled.div`\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\ninterface FormValues {\n  name: string;\n  email: string;\n  address: string;\n}\n\nconst EligibilityApplication = () => {\n  const { dispatch } = useContext(Store);\n  const { handleChange, handleSubmit, values } = useFormik<FormValues>({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      address: \"\",\n    },\n    onSubmit: (values) => postDataAction(values, dispatch),\n  });\n\n  return (\n    <FormWrapper>\n      <Title>Cards</Title>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          onChange={handleChange}\n          value={values.name}\n          placeholder=\"Name\"\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          onChange={handleChange}\n          value={values.email}\n          placeholder=\"Email\"\n        />\n        <FormInput\n          type=\"text\"\n          name=\"address\"\n          id=\"address\"\n          onChange={handleChange}\n          value={values.address}\n          placeholder=\"Address\"\n        />\n        <SubmitButton text=\"Submit\" />\n      </form>\n    </FormWrapper>\n  );\n};\n\nexport default EligibilityApplication;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ResultsWrapper = styled.div`\n  flex: 1 1 auto;\n  padding-top: 48px;\n  justify-content: center;\n  margin: 0 -8px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst EligibilityResults = () => {\n  return <ResultsWrapper></ResultsWrapper>;\n};\n\nexport default EligibilityResults;\n","import React from \"react\";\nimport View from \"../../DesignSystem/View\";\nimport EligibilityApplication from \"./EligibilityApplication\";\nimport EligibilityResults from \"./EligibilityResults\";\n\nconst Eligibility = () => {\n  return (\n    <View>\n      <EligibilityApplication />\n      <EligibilityResults />\n    </View>\n  );\n};\n\nexport default Eligibility;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Eligibility from \"./Views/Eligibility\";\n\nconst AppWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding: 40px;\n`;\n\nconst App = () => {\n  return (\n    <AppWrapper>\n      <Eligibility />\n    </AppWrapper>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle, css } from \"styled-components\";\n\nexport default createGlobalStyle`\n  ${css`\n    @font-face {\n      font-family: sans-serif;\n      font-weight: 100 500;\n      font-style: normal;\n      font-display: fallback;\n    }\n\n    html,\n    body {\n      margin: 0;\n      padding: 0;\n      width: 100%;\n      height: 100%;\n    }\n  `}\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport GlobalStyle from \"./DesignSystem/globalStyles\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}